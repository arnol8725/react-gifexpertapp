{"version":3,"sources":["component/AddCategory.js","component/GifGridItem.js","helpers/getGifs.js","component/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","protoType","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","Category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","cat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACQ,mCACG,sBACKC,SAdI,SAACC,GAEZA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAoBO,OAC3CN,EAAc,MAOf,SAGK,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAtBM,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,eA8B/BZ,EAAYe,UAAY,CACpBd,cAAgBe,IAAUC,KAAKC,YAGpBlB,Q,QC9BAmB,EATK,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC3B,OACG,sBAAKC,UAAU,yCAAf,UACK,qBAAKC,IAAKF,EAAKG,IAAKJ,IAChB,4BAAIA,Q,uBCHPK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTN,EADS,0FACgFO,UAAUF,GAD1F,sBAESG,MAAMR,GAFf,cAETS,EAFS,gBAGMA,EAAUC,OAHhB,uBAGRC,EAHQ,EAGRA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAE3B,MAAO,CACHhB,GAAKgB,EAAIhB,GACTC,MAASe,EAAIf,MACbC,IAAG,UAAGc,EAAIC,cAAP,aAAG,EAAYC,iBAAiBhB,QAV5B,kBAaVY,GAbU,4CAAH,sDC6BLK,EA7BE,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAKhB,ECJyB,SAAEjB,GAE1B,MAA0BR,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPjB,EAAShB,GACJkC,MAAM,SAAAC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAAC9B,IAKG+B,EDnBwBK,CAAcnB,GAAjCoB,EAAb,EAAQd,KAAYO,EAApB,EAAoBA,QAGnB,OAEI,qCAEI,qBAAIjB,UAAU,oCAAd,cAAqDI,EAArD,OAEEa,GAAW,mBAAGjB,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAIQwB,EAAMZ,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEO7C4B,EA3BM,WAGjB,MAAoC9C,mBAAS,CAAC,SAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAGA,OACI,qCACI,8CAGA,cAAC,EAAD,CACIA,cAAiBA,IAGrB,uBAEA,6BAEQgD,EAAWd,KAAM,SAACe,EAAI9B,GAAL,OAAY,cAAC,EAAD,CAAoBO,SAAYuB,GAAlBA,YChB/DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba7695f1.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) =>{\n        setinputValue(e.target.value);\n    }\n    const handleSumit = (e) => {\n        //Este es para no refrescar la pagina \n             e.preventDefault();\n\n             if (inputValue.trim().length > 2){\n                setCategories( category =>  [inputValue,...category]);\n                setinputValue('');\n             }\n                \n    }\n\n    return (  \n            <>\n               <form \n                    onSubmit={handleSumit}\n               >\n                    <input \n                        type='text' \n                        value = { inputValue }\n                        onChange = { handleInputChange }\n                    />\n                </form> \n                \n            </>\n\n    );\n}\n\nAddCategory.protoType = {\n    setCategories : PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n\n","import React from 'react';\n\n\nconst GifGridItem = ({id,title,url}) => {\n    return ( \n       <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n                <p>{title}</p>\n       </div>\n     );\n}\n \nexport default GifGridItem;","\n\n\n\nexport const getGifs = async(Category) => {\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=UyuPQHM82nZYujBxhqUUl8g6vnkbxUYO&q=${encodeURI(Category)}&limit=10`;\n        const respuesta = await fetch(url);\n        const {data} = await respuesta.json();\n        \n        const gifs = data.map ( img => { \n            \n            return {\n                id : img.id,\n                title :  img.title,\n                url : img.images?.downsized_medium.url\n                 }\n    })\n      return gifs;\n}   \n","import React,{useState,useEffect} from 'react'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid =  ({Category}) => {\n\n  \n   \n\n   const { data:image, loading } = useFetchGifs( Category );   \n    \n\n    return ( \n        \n        <>\n         \n            <h3 className=\"animate__animated animate__fadeIn\"> { Category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n            <div className='card-grid'>\n            \n           \n                {\n                    image.map( img => <GifGridItem key={img.id} {...img} />  )\n                }\n                \n           \n        </div>\n        </>\n        \n     );\n}\n \nexport default GifGrid;","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n//import { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n","import React,{useState} from 'react'\nimport AddCategory from './component/AddCategory';\nimport GifGrid from './component/GifGrid';\nconst GifExpertApp = () => {\n\n    //let categorias = ['Goku','Vegueta','Picoro'];\n    const [categories, setCategories] = useState(['Goku']);\n    \n\n    return (  \n        <>\n            <h2>GifExpertApp</h2>\n            \n\n            <AddCategory\n                setCategories = {setCategories}\n                \n            />\n            <hr/>\n\n            <ul>\n                {\n                    categories.map ( (cat,id) => <GifGrid key={cat}  Category = {cat}/>)\n                }\n               \n            </ul>\n        </>\n    );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}